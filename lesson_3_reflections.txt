When would you want to use a remote repository rather than keeping all your work local?
- to store the work on a safe
- to ensure to work with other colleagues or people or contributors

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- I want to decide when it is the best point of time to sync

How to sync with remote repository
- checkout branch what has to be synced
- to sync local changes to remote repo use: git push <remote repository, normally origin> <branch-name>
- checkout branch what has to be synced
- to get remote changes to local repo use: git pull <remote repository, normally origin> <branch-name>

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- fork is a GitHub specific clone of a repo, fork is not git dependent
- clone is a copy of a repo like remote <-> remote, remote <-> local, local <-> local
- a branch is a logical part of a repo to categorize a logical change. Branches you can merge to other branchs

What is the benefit of having a copy of the last known state of the remote stored locally?
- so you know what changes and branches exist on remote
- you can identify changes by others
- you can decide what and where to merge, if wanted

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- before I got to know git I've used svn
- with svn it is not easier to collaborate, it is always harder, there is no possibility to do things like pull requests
- to collaborate with others without GitHub it would be very hard to sync